--create database StepScheduler

use StepScheduler

--tables
create table Users ( -- представляет пользователей приложения 
	[UserId] int identity(1,1) primary key, -- pk
	[Login] nvarchar(20) unique check([Login]!='') not null, -- логин пользователя для авторизации (должно быть уникальным и не пустым (больше проверок в приложении))
	[Password] nvarchar(20) check([Password]!='') not null, -- пароль пользователя для авторизации (не должно быть пустым (больше проверок в приложении))
	[Photo] varbinary(max), -- фотография пользователя (необязательно)
	[Name] nvarchar(20) check([Name]!='') not null, -- имя пользователя (не должно быть пустым)
	[Surname] nvarchar(20) check([Surname]!='') not null, -- фамилия пользователя (не должно быть пустым)
	[PhoneNumber] nvarchar(max), -- контактный телефон пользователя (необязательно к заполнению)
	[E-Mail] nvarchar(max), -- электронная почта пользователя (необязательно к заполнению)
	[BirthDate] date, -- дата рождения пользователя (необязательно к заполнению)
	[Description] nvarchar(max) check([Description]!='') not null, -- краткое описание пользователя (пример: должность, основные темы для преподавания)
	--[Subsection] nvarchar(10) check([Subsection]!='') not null, -- к какому подразделу относится (пример: МКА, ПКО)
	[IsAdmin] bit default(0), -- Проверка: является ли данный пользователь администратором (по умолчанию false)
	[IsBlocked] bit default(0) -- Проверка: заблокирован ли пользователь (по умолчанию false). Пример : пользователь ушел в отпуск/заболел/уволился.
);

create table ClassRooms ( -- представляет аудитории
	[ClassRoomId] int identity(1,1) primary key , -- pk
	[Number] int unique check ([Number]>0) not null, -- порядковый номер кабинета в здании (отсчет начинается с 1. Должно быть уникальным)
	[WorkPlacesCount] int check ([WorkPlacesCount]>0) not null, -- кол-во рабочих мест в аудитории (кол-во больше 0. Макс кол-во мест неограничено?)
	[IsAvailable] bit default(1) not null, -- доступна ли аудитория для занятий (по умолчанию true). пример false = закрыта на ремонт)
	[Description] nvarchar(max) -- краткое описание аудитории (пример аудитория, ориентированная на дизайнеров/конференц-зал)
);

create table Requests( -- представляет заявку на бронирование
	[RequestId] int identity(1,1) primary key, -- pk
	[ClassRoomId] int not null, -- желаемая аудитория для проведения события 
	[UserId] int not null, -- инфо о пользователе, который отправляет заявку
	[DateRequest] date default getdate() not null, -- дата подачи заявки на бронь (значение задается по умолчания (сегодня))
	[ClassDate] date not null, -- желаемая дата проведения события (максимально-возможная дата - на 30 дней позже даты оформления заявки)
	[LessonNumber] int not null, -- номер пары по расписанию (значение от 1 до 8). Пример 1-ая пара 9:00, 2-ая 10:30, 8-ая 19:30. 
	[CountOfVisitors] int check ([CountOfVisitors]>0) not null, -- ожимдаемое кол-во студентов/участников мероприятия (больше 0)
	[EventDescription] nvarchar(max), -- краткое описание мероприятия или комментария(необязательно к заполнению). 
	[Status] int default(0) check ([Status]>=-1 and [Status]<=1), -- статус заявки (значения от -1 до 1, по умолчанию (0)). Пример: (-1) - заявка отклонена, (1) заявка принята,(0) - заявка еще не обработана
	[IsNew] bit default(1) -- определяет является ли заявкой новой (по умолчанию true). Пример заявка отправлена на расмотрение администрацией. После просмотра списка заявок значение переводится в "false"
);

create table ReservedRooms(
	[ReservedRoomId] int identity(1,1) primary key, -- pk
	[RequestId] int not null, --хранит информацию об утвержденной заявке на бронирование
	[EventType] int check([EventType]>=0 and [EventType]<=2) not null --тип события (при подтверждении заявки выбирается тип события (0-обычное занятие, 1-консультация, 2-мероприятия))
);

--constraints
--Проверка даты бронирования
--alter table [Requests] add constraint ClassDateValidation check ([Requests].[ClassDate]<=dateadd(month,1,getdate())and [Requests].[ClassDate]>=getdate());
--Проверка корректности ввода пары
alter table [Requests] add constraint LessonNumValidation check ([Requests].LessonNumber >=1 and [Requests].[LessonNumber] <=8)

--foreign keys
alter table Requests add foreign key ([UserId]) references Users  ([UserId]);
alter table Requests add foreign key ([ClassRoomId]) references ClassRooms ([ClassRoomId]);
alter table ReservedRooms add foreign key ([RequestId]) references Requests ([RequestId]);

--Начальные значения
--Users
insert into Users -- логин, пароль, имя, фамилия, № телефона, почта, дата рождения, 
		([Login], [Password], [Name], [SurName], [PhoneNumber], [E-mail], [BirthDate], [Description], [IsAdmin])
values	('admin','admin','Галина','Мурмыль','+380984174707','StepManager@ukr.net','1980/10/10','Менеджер учебной части',1),
		('harl','harl','Вадим','Харламенко','+380978265298','vadim-kharlamenko@ukr.net','1985/6/24','Преподаватель C++, C#',0),
		('rub','rub','Сергей','Рубан','+380676346777','spike_serge@ukr.net','1972/3/16','Преподаватель C#',0),
		('redkina','redkina','Алла','Редькина','+380968181780','allaredkinapm@gmail.com','1976/1/3','Преподаватель УПП',0),
		('march','march','Анатолий','Марченко','+380664848377','marchenko@gmail.com','1991/12/14','Преподаватель WEB',0),
		('putin','putin','Владимир','Путин','+380551325493','putin@mail.ru','1951/5/17','Преподаватель дизайна',0),
		('mka','mka','Андрей','Бубырь','+380551542869','mka@mail.ru','1990/3/27','Преподаватель. Главный по МКА',1);
--classrooms
insert into ClassRooms -- порядковый номер кабинета, кол-во рабочих мест, краткое описание, доступна ли аудитория
		([Number], [WorkPlacesCount], [IsAvailable], [Description])
values	(1,15,1,'для дизайнеров'),
		(2,10,00,'без электричества'),
		(3,15,1,'для дизайнеров'),
		(4,15,1,'для сетевиков'),
		(5,14,1,'для МКА'),
		(6,15,1,'для дизайнеров'),
		(7,15,1,'для программистов'),
		(8,15,0,'на ремонте'),
		(9,19,1,'для программистов'),
		(10,15,1,'для дизайнеров'),
		(11,15,1,'для программистов'),
		(12,15,1,'для МКА'),
		(13,15,1,'для программистов'),
		(14,15,1,'для МКА'),
		(15,35,1,'Конференц-зал')
--requests
insert into Requests -- id аудитории, id пользователя, дата подачи заявки, дата проведения события, номер пары, кол-во студентов, описание, статус, является ли заявкой новой
		([ClassRoomId], [UserId], [DateRequest], [ClassDate], [LessonNumber], [CountOfVisitors], [EventDescription], [Status], [IsNew])
values	(5,4,'2019/12/16','2019/12/17',7,12,'Занятие с группой РПО-18',1,0),
		(5,4,'2019/12/16','2019/12/17',8,12,'Занятие с группой РПО-18',1,0),
		(2,2,'2019/12/16','2019/12/17',6,10,'Консультация с группой РПО-18',1,0),
		(3,2,'2019/12/16','2019/12/17',5,12,'Консультация с группой РПО-18',-1,0),
		(1,2,'2019/12/16','2019/12/17',4,12,'Консультация с группой РПО-18',-1,0),
		(4,2,'2019/12/16','2019/12/17',3,12,'Консультация с группой РПО-18',0,0),
		(6,2,'2019/12/16','2019/12/17',7,12,'Консультация с группой РПО-18',0,0),
		(8,7,'2019/12/16','2019/12/17',5,12,'Занятие с группой МКА-18',1,0),
		(9,7,'2019/12/16','2019/12/17',4,12,'Занятие с группой МКА-18',1,0),
		(10,7,'2019/12/16','2019/12/17',3,12,'Консультация с группой МКА-18',-1,0),
		(11,7,'2019/12/16','2019/12/17',2,12,'Занятие с группой МКА-18',1,0),
		(12,7,'2019/12/16','2019/12/17',1,12,'Занятие с группой МКА-18',1,0),
		(13,7,'2019/12/16','2019/12/17',2,12,'Консультация с группой МКА-18',0,0),
		(14,7,'2019/12/16','2019/12/17',1,12,'Консультация с группой МКА-18',0,0),

		(5,4,'2019/12/16','2019/12/18',7,12,'Занятие с группой РПО-18',1,0),
		(5,4,'2019/12/16','2019/12/18',8,12,'Занятие с группой РПО-18',1,0),
		(5,7,'2019/12/16','2019/12/18',6,12,'Занятие с группой МКА-18',1,0),
		(1,2,'2019/12/16','2019/12/18',1,12,'Занятие с группой РПО-18',1,0),
		(2,2,'2019/12/16','2019/12/18',2,12,'Занятие с группой РПО-18',1,0),
		(3,7,'2019/12/16','2019/12/18',3,12,'Консультация с группой МКА-18',1,0),
		(4,2,'2019/12/16','2019/12/18',4,12,'Занятие с группой РПО-18',1,0),
		(6,2,'2019/12/16','2019/12/18',6,12,'Занятие с группой РПО-18',1,0),
		(7,7,'2019/12/16','2019/12/18',3,12,'Консультация с группой МКА-18',1,0),

		(5,4,'2019/12/16','2019/12/19',7,12,'Занятие с группой РПО-18',1,0),
		(5,4,'2019/12/16','2019/12/19',8,12,'Занятие с группой РПО-18',1,0),
		(2,2,'2019/12/16','2019/12/19',6,10,'Консультация с группой РПО-18',1,0),
		(3,2,'2019/12/16','2019/12/19',5,12,'Консультация с группой РПО-18',-1,0),
		(1,2,'2019/12/16','2019/12/19',4,12,'Консультация с группой РПО-18',-1,0),
		(4,2,'2019/12/16','2019/12/19',3,12,'Консультация с группой РПО-18',0,0),
		(6,2,'2019/12/16','2019/12/19',7,12,'Консультация с группой РПО-18',0,0),
		(8,7,'2019/12/16','2019/12/19',5,12,'Занятие с группой МКА-18',1,0),
		(9,7,'2019/12/16','2019/12/19',4,12,'Занятие с группой МКА-18',1,0),
		(10,7,'2019/12/16','2019/12/19',3,12,'Консультация с группой МКА-18',-1,0),
		(11,7,'2019/12/16','2019/12/19',2,12,'Занятие с группой МКА-18',1,0),
		(12,7,'2019/12/16','2019/12/19',1,12,'Занятие с группой МКА-18',1,0),
		(13,7,'2019/12/16','2019/12/19',2,12,'Консультация с группой МКА-18',0,0),
		(14,7,'2019/12/16','2019/12/19',1,12,'Консультация с группой МКА-18',0,0)
		
--reservedrooms
insert into ReservedRooms -- id заявки, тип события (0-обычное занятие, 1-консультация, 2-мероприятия)
		([RequestId], [EventType])
values	(1,0),(2,0),(8,0),(9,0),(11,0),(12,0),
		(3,1),(4,1),(5,1),(6,1),(7,1),(10,1),(13,1),(14,1)